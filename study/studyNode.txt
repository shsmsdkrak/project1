> 객체 지향 JavaScript
    >> 생성자 함수 (constructor)
        - 생성자 함수는 new 키워드를 사용했을 때 객체를 반환하는 함수이다. ex) new 생성자함수() > object 반환
        - 생성자 함수는 new 키워드를 사용하지 않고 일반함수와 같이 호출하게 된다면 undefined를 반환한다. ex) 생성자함수() > undefined 반환
        - 생성자 함수는 해당 객체의 초기값을 셋팅한다.
        - 생성자 함수를 사용하게 되면 일반 객체에 반복적으로 정의해야하는 속성을 줄여주고 재사용할 수 있게 해준다.
        - 서로 다른 객체를 만들 수 있도록 해주는 함수이다. - 객체 창조자

    >> Prototype
        - 생성자를 이용해서 만든 모든 객체가 공통적으로 사용하는 함수를 만들 수 있게 된다.
        - 성능을 절약할 수 있고, 메모리 관리(절약)에도 효율적이다.
        - 생성자 함수의 원형을 정의할 수 있다 
        - Person 생성자 함수를 이용하여 만든 모든 객체는 getName이라는 메소드를 참조할 수 있다.
        - 수정이 필요한 객체에서는 getName을 재정의 하여 사용할 수 있다.
        - Prototype을 이용하게 되면 객체를 생성할때 마다 생성되는 메소드를 포함하고 있지 않아 성능을 절약할 수 있다.
        - 메모리 관리도 효율적으로 할 수 있다.

    >> Prototype 상속 (Inheritance)
        - __proto__라는 prototype링크를 이용하여 상속을 구현할 수 있다. 다양한 이유로 인해 사용하지 않음
        - Object.create(부모객체)를 이용하여 상속을 구현한다.

    >> Class
        - ECMA6버전부터 추가 된 문법이다. 즉, ECMA6이전버전에서는 지원하지 않는 문법이다.
        - 객체를 만들어 주는 공장이다. 생성자(constructor) 함수와 동일한 기능
        - class는 초기값을 constructor 메소드를 이용하여 설정할 수 있다.

    >> class 상속 (Inheritance)
        - 공통으로 사용하는 기능이 아닌, 개별적으로 기능이 필요할 때 상속을 사용한다.
        - class에서의 상속은 extends 키워드를 사용하여 상속을 구현한다. ex) class PersonTwo(자식) extends Person(부모)
        - 부모 class의 속성이나 메소드가 아닌 자식class에서만 사용할 수 있는 메소드를 정의할 수 있다 (개별 메소드)
        - 부모 class의 속성, 메소드를 가짐과 동시에 추가로 자식class에서 구현한 기능을 사용할 수 있다.
        - 부모 class의 속성이나 메소드를 변경하게 되면 상속받고 있는 모든 자식class에 영향을 받는다.
        - 부모 class의 생성자를 호출하는 방법은 자식 constructor에서 super()를 호출한다.
        - super를 함수로 사용할 때는 부모클래스의 생성자를 가르킨다. ex) super() 부모생성자
        - super에 .이 붙게되면 super는 부모 class가 된다. ex) super.메소드() 부모 class 자신에 정의 된 메소드
        - sub class가 super class의 기능을 물려받기 위해서는 sub class가 super class의 자식이 된다.

    >> Prototype VS __proto__
        - 생성자 함수가 만들어지는것과 동시에 생성자함수.prototype객체를 생성한다.
        - 생성자 함수는 prototype객체를 참조하고, prototype객체는 만들어짐과 동시에 생성되는 constructor속성으로 인해 생성자 함수를 참조한다. (상호참조)
        - 생성자 함수를 통하여 만들어진 객체는 __proto__라는 속성을 갖게 되는데, __proto__는 생성자 함수의 prototype을 참조하게 된다.
        prototype = 생성자 함수가 생성될 때 자동으로 생성되는 객체
        __proto__ = 생성자 함수를 이용해 만들어진 객체가 갖게되는 속성으로, 생성자 함수의 prototype을 참조